import 'package:flutter/material.dart';
import 'package:test_app/aqsam/addelement.dart/specifed.dart/questionsforall.dart/firstpage.dart';
import 'package:test_app/aqsam/addelement.dart/specifed.dart/questionsforall.dart/classquestion.dart';

// ignore: must_be_immutable
class Tree extends StatelessWidget {
  Tree({super.key});

  List<Question> questions3 = [
    Question(
      questionText: 'ูุง ููุน ุงูุฃุดุฌุงุฑ ุงูุชู ุณูุชู ุฒุฑุงุนุชูุงุ',
      options: [
        'ุฃุดุฌุงุฑ ูุซูุฑุฉ (ุชููุ ูููููุ ุจุฑุชูุงู...)',
        'ุฃุดุฌุงุฑ ุธู ูุฒููุฉ',
        'ูุจุงุชุงุช ูุดุฌูุฑุงุช ุตุบูุฑุฉ',
      ],
    ),
    Question(
      questionText: 'ูู ุงููููุน ูุญุชุงุฌ ุฅูู ุชุตุงุฑูุญ ูุฒุฑุงุนุฉ ุงูุฃุดุฌุงุฑุ',
      options: ['ูุนูุ ุงูุฌูุนูุฉ ุชููุฑ ุงูุชุตุงุฑูุญ', 'ุงูููุงู ูุชุงุญ ููุฒุฑุงุนุฉ'],
    ),
    Question(
      questionText: 'ูู ุณูุชู ุชูููุฑ ุงูุฃุฏูุงุช ูููุชุทูุนููุ',
      options: ['ูุนูุ ุณูุชู ุชูููุฑูุง', 'ูุฌุจ ุนูู ุงููุชุทูุน ุฅุญุถุงุฑ ุงูุฃุฏูุงุช ุจููุณู'],
    ),
    Question(
      questionText: 'ูู ุนุฏุฏ ุงูุฃุดุฌุงุฑ ุงูุชู ุณูุชู ุฒุฑุงุนุชูุงุ',
      options: ['ุฃูู ูู 50 ุดุฌุฑุฉ', 'ูู 50 ุฅูู 200 ุดุฌุฑุฉ', 'ุฃูุซุฑ ูู 200 ุดุฌุฑุฉ'],
    ),
    Question(
      questionText: 'ูู ุนุฏุฏ ุงููุชุทูุนูู ุงููุทููุจุ',
      options: [
        'ุฃูู ูู 10 ูุชุทูุนูู',
        'ูู 10 ุฅูู 30 ูุชุทูุนุงู',
        'ุฃูุซุฑ ูู 30 ูุชุทูุนุงู',
      ],
    ),
    Question(
      questionText: 'ูู ุณูุชู ุชูููุฑ ูุฌุจุงุช ุฃู ูุตุงุฑูู ุชูููุ',
      options: [' ูุนูุ ููุฌุฏ ุฏุนู ูููุชุทูุนูู', ' ูุงุ ุงููุชุทูุน ูุณุคูู ุนู ุฐูู'],
    ),
    Question(
      questionText: 'ูู ุณูุชู ุชุตููุฑ ุงููุดุงุท ููุดุฑูุ',
      options: ['๐ท ูุนูุ ุณูุชู ุงูุชูุซูู ุงูุฅุนูุงูู', 'โ ูุงุ ุงููุดุงุท ุฎุงุต ุจุฏูู ุชุตููุฑ'],
    ),
  ];

  @override
  Widget build(BuildContext context) {
    List<Question> question4 = [
      Question(
        questionText: 'ูู ุณูุชู ุชูููุฑ ุชุฏุฑูุจ ูููุชุทูุนูู ูุจู ุงูุฒุฑุงุนุฉุ',
        options: ['ูุนูุ ููุฌุฏ ุฌูุณุฉ ุชุฏุฑูุจูุฉ', 'ุณูุชู ุงูุดุฑุญ ุฎูุงู ุงูุนูู'],
      ),
      Question(
        questionText: 'ูุง ููุน ุงูุชุฑุจุฉ ูู ุงููููุนุ',
        options: ['ุชุฑุจุฉ ุฑูููุฉ', 'ุชุฑุจุฉ ุทูููุฉ', 'ุชุฑุจุฉ ุฎุตุจุฉ ุฒุฑุงุนูุฉ'],
      ),
      Question(
        questionText: 'ูู ุณูุชู ุชุฎุตูุต ุฃูุงูู ุฌููุณ ูููุชุทูุนููุ',
        options: ['ูุนูุ ุณูุชู ุชูููุฑ ูุธูุงุช ูููุงุนุฏ', 'ุงูููุงู ููุชูุญ ุจุฏูู ุชุฌููุฒุงุช'],
      ),
      Question(
        questionText: 'ูู ุณูุชู ุชูุฏูู ุดูุงุฏุฉ ุชุทูุนุ',
        options: ['ูุนูุ ุจุดูุงุฏุงุช ูุนุชูุฏุฉ', 'ูุงุ ูู ูุชู ุชูุฏูู ุดูุงุฏุงุช'],
      ),
      Question(
        questionText: 'ูู ูุณุชุบุฑู ุงููุดุงุท ูู ููุชุ',
        options: [
          'ุฃูู ูู ุณุงุนุชูู',
          'ูู ุณุงุนุชูู ุฅูู ุฃุฑุจุน ุณุงุนุงุช',
          'ุฃูุซุฑ ูู ุฃุฑุจุน ุณุงุนุงุช',
        ],
      ),
      Question(
        questionText: ' ูุง ุงููุฏู ูู ุงูุชุดุฌูุฑุ',
        options: [
          ' ุชุญุณูู ุฌูุฏุฉ ุงูููุงุก',
          ' ุชุนุฒูุฒ ุงููุณุงุญุงุช ุงูุฎุถุฑุงุก',
          ' ุชูููู ุขุซุงุฑ ุงูุชุบูุฑ ุงูููุงุฎู',
          ' ุชุญุณูู ุฌูุงููุฉ ุงูุฃูุงูู ุงูุนุงูุฉ',
        ],
      ),
    ];
    return GestureDetector(
      onTap: () {
        FocusScope.of(context).unfocus();
      },
      child: Scaffold(
        appBar: AppBar(
          actions: const [
            Padding(
              padding: EdgeInsets.all(8.0),
              child: Row(
                children: [
                  Text(
                    "ุจูุฆู",
                    style: TextStyle(color: Color(0xffce9dd2), fontSize: 25),
                  ),
                  Padding(
                    padding: EdgeInsets.all(10),
                    child: Icon(Icons.spa, color: Color(0xffce9dd2), size: 25),
                  ),
                ],
              ),
            ),
          ],
        ),
        body: SafeArea(
          child: Column(
            children: [
              Padding(
                padding: const EdgeInsets.only(
                  left: 80,
                  right: 10,
                  bottom: 7,
                  top: 10,
                ),
                child: Container(
                  width: MediaQuery.of(context).size.width,
                  height: 40,
                  decoration: BoxDecoration(
                    color: const Color(0xFF68316D), // ุงูููู ุงูุจููุณุฌู
                    borderRadius: BorderRadius.circular(10),
                  ),
                  child: const Padding(
                    padding: EdgeInsets.all(8.0),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.start,
                      children: [
                        Icon(Icons.park, size: 20, color: Colors.white),
                        SizedBox(width: 5),
                        Flexible(
                          child: Text(
                            "ุงูุชุดุฌูุฑ ูุฅุนุงุฏุฉ ุงูุชุดุฌูุฑ",
                            style: TextStyle(color: Colors.white, fontSize: 18),
                            textAlign: TextAlign.center,
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              ),
              Firstpage(
                questionsf: questions3,
                questionsf2: question4,
                nameqesem2: "ุจูุฆู",
                icon: Icons.spa,
                nameqesem4: 'ุงูุชุดุฌูุฑ ูุฅุนุงุฏุฉ ุงูุชุดุฌูุฑ',
              ),
            ],
          ),
        ),
      ),
    );
  }
}
